{"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2023/06/29/hello-world/"},{"title":"vscode &amp; wsl2 实现c&#x2F;cpp的多文件编译调试","text":"本篇文章将介绍wsl2环境下 vscode的多文件编译 vscode和wsl2的安装与下载就不再过多的赘述 step1: 安装vscode插件 12C/C++ Extension Packcmake step2：在linux安装cmake， make 使用cmake是因为cmake对于多文件编译比较方便 debian系linux可以使用以下命令一键安装 1sudo apt install cmake make gcc g++ gbd 在这里，环境方面就准备的差不多了 接下来配置vscode中最令人头疼的tasks.json 与 launch.json 调试时，在当前文件所在的目录下新建一个bulid文件，以免生成过多的cmake的文件 tasks.json 1234567891011121314151617181920212223242526272829303132333435{ &quot;version&quot;: &quot;2.0.0&quot;, &quot;options&quot;: { &quot;cwd&quot;: &quot;${fileDirname}/build&quot; }, &quot;tasks&quot;: [ { &quot;type&quot;: &quot;shell&quot;, &quot;label&quot;: &quot;cmake&quot;, &quot;command&quot;: &quot;cmake&quot;, &quot;args&quot;: [ &quot;..&quot; ] }, { &quot;label&quot;: &quot;make&quot;, &quot;group&quot;: { &quot;kind&quot;: &quot;build&quot;, &quot;isDefault&quot;: true }, &quot;command&quot;: &quot;make&quot;, &quot;args&quot;: [] }, { &quot;label&quot;: &quot;Build&quot;, &quot;dependsOrder&quot;: &quot;sequence&quot;, &quot;dependsOn&quot;: [ &quot;cmake&quot;, &quot;make&quot; ] } ],} launch.json 123456789101112131415161718192021222324252627282930313233343536{ // Use IntelliSense to learn about possible attributes. // Hover to view descriptions of existing attributes. // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387 &quot;version&quot;: &quot;0.2.0&quot;, &quot;configurations&quot;: [ { &quot;name&quot;: &quot;(gdb) hqyj&quot;, &quot;type&quot;: &quot;cppdbg&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;program&quot;: &quot;${fileDirname}/bulid/${fileBasenameNoExtension}&quot;, // 这里是可执行文件路径，可以根据自己的需求更改 &quot;args&quot;: [], &quot;stopAtEntry&quot;: false, &quot;cwd&quot;: &quot;/usr/bin&quot;, &quot;environment&quot;:[], &quot;externalConsole&quot;: false, &quot;MIMode&quot;: &quot;gdb&quot;, &quot;setupCommands&quot;: [ { &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;, &quot;text&quot;: &quot;-enable-pretty-printing&quot;, &quot;ignoreFailures&quot;: true }, { &quot;description&quot;: &quot;Set Disassembly Flavor to Intel&quot;, &quot;text&quot;: &quot;-gdb-set disassembly-flavor intel&quot;, &quot;ignoreFailures&quot;: true } ], &quot;preLaunchTask&quot;: &quot;Build&quot; } ]} 配置完成后，就可以开始愉快的编码啦","link":"/2023/07/03/vscode-wsl2-%E5%AE%9E%E7%8E%B0c-cpp%E7%9A%84%E5%A4%9A%E6%96%87%E4%BB%B6%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95/"}],"tags":[{"name":"vscode","slug":"vscode","link":"/tags/vscode/"},{"name":"c&#x2F;cpp","slug":"c-cpp","link":"/tags/c-cpp/"},{"name":"wsl","slug":"wsl","link":"/tags/wsl/"}],"categories":[{"name":"经验分享","slug":"经验分享","link":"/categories/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"}],"pages":[]}