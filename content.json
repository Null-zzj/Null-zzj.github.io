{"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2023/06/29/hello-world/"},{"title":"vscode &amp; wsl2 实现c&#x2F;cpp的多文件编译调试","text":"本篇文章将介绍wsl2环境下 vscode的多文件编译 vscode和wsl2的安装与下载就不再过多的赘述 step1: 安装vscode插件 12C/C++ Extension Packcmake step2：在linux安装cmake， make 使用cmake是因为cmake对于多文件编译比较方便 debian系linux可以使用以下命令一键安装 1sudo apt install cmake make gcc g++ gbd 在这里，环境方面就准备的差不多了 接下来配置vscode中最令人头疼的tasks.json 与 launch.json 调试时，在当前文件所在的目录下新建一个bulid文件，以免生成过多的cmake的文件 tasks.json 1234567891011121314151617181920212223242526272829303132333435{ &quot;version&quot;: &quot;2.0.0&quot;, &quot;options&quot;: { &quot;cwd&quot;: &quot;${fileDirname}/build&quot; }, &quot;tasks&quot;: [ { &quot;type&quot;: &quot;shell&quot;, &quot;label&quot;: &quot;cmake&quot;, &quot;command&quot;: &quot;cmake&quot;, &quot;args&quot;: [ &quot;..&quot; ] }, { &quot;label&quot;: &quot;make&quot;, &quot;group&quot;: { &quot;kind&quot;: &quot;build&quot;, &quot;isDefault&quot;: true }, &quot;command&quot;: &quot;make&quot;, &quot;args&quot;: [] }, { &quot;label&quot;: &quot;Build&quot;, &quot;dependsOrder&quot;: &quot;sequence&quot;, &quot;dependsOn&quot;: [ &quot;cmake&quot;, &quot;make&quot; ] } ],} launch.json 123456789101112131415161718192021222324252627282930313233343536{ // Use IntelliSense to learn about possible attributes. // Hover to view descriptions of existing attributes. // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387 &quot;version&quot;: &quot;0.2.0&quot;, &quot;configurations&quot;: [ { &quot;name&quot;: &quot;(gdb) hqyj&quot;, &quot;type&quot;: &quot;cppdbg&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;program&quot;: &quot;${fileDirname}/bulid/${fileBasenameNoExtension}&quot;, // 这里是可执行文件路径，可以根据自己的需求更改 &quot;args&quot;: [], &quot;stopAtEntry&quot;: false, &quot;cwd&quot;: &quot;/usr/bin&quot;, &quot;environment&quot;:[], &quot;externalConsole&quot;: false, &quot;MIMode&quot;: &quot;gdb&quot;, &quot;setupCommands&quot;: [ { &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;, &quot;text&quot;: &quot;-enable-pretty-printing&quot;, &quot;ignoreFailures&quot;: true }, { &quot;description&quot;: &quot;Set Disassembly Flavor to Intel&quot;, &quot;text&quot;: &quot;-gdb-set disassembly-flavor intel&quot;, &quot;ignoreFailures&quot;: true } ], &quot;preLaunchTask&quot;: &quot;Build&quot; } ]} 配置完成后，就可以开始愉快的编码啦","link":"/2023/07/03/vscode-wsl2-%E5%AE%9E%E7%8E%B0c-cpp%E7%9A%84%E5%A4%9A%E6%96%87%E4%BB%B6%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95/"},{"title":"nvim快捷键备忘","text":"return { – The default ‘‘ is the space. leader = “ “, -- 键切换/跳转窗口 jump_left_window = &quot;&lt;C-h&gt;&quot;, jump_right_window = &quot;&lt;C-l&gt;&quot;, jump_up_window = &quot;&lt;C-k&gt;&quot;, jump_down_window = &quot;&lt;C-j&gt;&quot;, -- View other usage of the plugin: https://github.com/akinsho/bufferline.nvim -- 选择缓冲区选项卡 pick_tab = &quot;&lt;leader&gt;b&quot;, -- View other usage of the plugin: https://github.com/nvim-neo-tree/neo-tree.nvim -- 打开或关闭文件资源管理器。 file_explorer = &quot;&lt;F9&gt;&quot;, -- 打开或关闭浮动窗口上的git status。 git_status = &quot;&lt;F8&gt;&quot;, -- View other usage of the plugin: https://github.com/stevearc/aerial.nvim -- 打开或关闭大纲，它需要调用lsp服务器 outline = &quot;&lt;F7&gt;&quot;, -- View other usage of the plugin: https://github.com/akinsho/toggleterm.nvim -- 打开或关闭终端 terminal_float = &quot;&lt;A-u&gt;&quot;, -- open terminal in a float window terminal_bottom = &quot;&lt;A-b&gt;&quot;, -- open terminal at the bottom -- View other usage of the plugin: https://github.com/Shatur/neovim-session-manager -- 切换会话 switch_session = &quot;&lt;leader&gt;ss&quot;, -- View other usage of the plugin: https://github.com/nvim-telescope/telescope.nvim -- 查找、搜索文件和查找缓冲区 find_files = &quot;&lt;leader&gt;ff&quot;, live_grep = &quot;&lt;leader&gt;fg&quot;, search_cursor = &quot;&lt;leader&gt;fc&quot;, find_buffer = &quot;&lt;leader&gt;fb&quot;, -- Use the to close telescope window. &lt;C-c&gt; is the default setting, can't edit it here. -- close_telescope = &quot;&lt;C-c&gt;&quot;, -- View other usage of the plugin: https://github.com/sindrets/diffview.nvim -- Use the shortcut to open 'git diff'. diff_open = &quot;&lt;leader&gt;df&quot;, -- Use the shortcut to close 'git diff'. diff_close = &quot;&lt;leader&gt;dc&quot;, -- View other usage of the plugin: https://github.com/mrjones2014/smart-splits.nvim -- 使用快捷键&lt;control + alt + hjkl&gt;调整窗口大小 resize_left = &quot;&lt;C-A-h&gt;&quot;, resize_down = &quot;&lt;C-A-j&gt;&quot;, resize_up = &quot;&lt;C-A-k&gt;&quot;, resize_right = &quot;&lt;C-A-l&gt;&quot;, -- View other usage of the plugin: https://github.com/neovim/nvim-lspconfig -- Goto goto_definition = &quot;gd&quot;, goto_references = &quot;gr&quot;, goto_declaration = &quot;gD&quot;, goto_impl = &quot;gi&quot;, -- goto_back = &quot;&lt;C-o&gt;&quot;, -- 使用快捷方式重命名代码符号 lsp_rename = &quot;&lt;leader&gt;re&quot;, -- 使用快捷方式格式化代码。 format = &quot;&lt;leader&gt;ft&quot;, }","link":"/2023/07/04/nvim%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E5%BF%98/"}],"tags":[{"name":"vscode","slug":"vscode","link":"/tags/vscode/"},{"name":"c&#x2F;cpp","slug":"c-cpp","link":"/tags/c-cpp/"},{"name":"wsl","slug":"wsl","link":"/tags/wsl/"}],"categories":[{"name":"经验分享","slug":"经验分享","link":"/categories/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"}],"pages":[]}